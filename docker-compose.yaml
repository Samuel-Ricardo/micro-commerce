services:
  frontend-app:
    container_name: frontend-app
    image: samuelrcabral/javashop_frontend:latest
    ports:
      - "4200:80"
    depends_on:
      - keycloak
      - api-gateway
    extra_hosts:
      - "host.docker.internal:host-gateway"

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.1
    command: ["start-dev", "--import-realm"]
    env_file:
      - .env.keycloak
    ports:
      - "8181:8080"
    volumes:
      - ./docker/keycloak/realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql
    extra_hosts:
      - "host.docker.internal:host-gateway"

  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:8
    volumes:
      - ./.docker/volume-data/mysql_keycloak_data:/var/lib/mysql
    env_file:
      - .env.keycloak
    extra_hosts:
      - "host.docker.internal:host-gateway"

  api-gateway:
    container_name: api-gateway
    image: samuelrcabral/api-gateway:latest
    ports:
      - "9000:8080"
    env_file:
      - .env.gateway
    depends_on:
      - product-service
      - order-service
      - inventory-service
    extra_hosts:
      - "host.docker.internal:host-gateway"

  notification-service:
    image: samuelrcabral/notification-service:latest
    ports:
      - "8083:8083"
    env_file:
      - .env.notification
    extra_hosts:
      - "host.docker.internal:host-gateway"

  product-service:
    container_name: product-service
    image: samuelrcabral/product-service:latest
    restart: on-failure
    ports:
      - "8080:8080"
    env_file:
      - .env.gateway
    depends_on:
      - mongodb
    extra_hosts:
      - "host.docker.internal:host-gateway"

  order-service:
    container_name: order-service
    image: samuelrcabral/order-service:latest
    restart: on-failure
    ports:
      - "8081:8081"
    env_file:
      - .env.order
    depends_on:
      - postgres
      - inventory-service
    extra_hosts:
      - "host.docker.internal:host-gateway"

  inventory-service:
    container_name: inventory-service
    image: samuelrcabral/inventory-service:latest
    restart: on-failure
    ports:
      - "8082:8080"
    env_file:
      - .env.gateway
    depends_on:
      - mysql
    extra_hosts:
      - "host.docker.internal:host-gateway"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    hostname: zookeeper
    restart: always
    env_file:
      - .env.kafka
    ports:
      - "2181:2181"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    env_file:
      - .env.kafka
    depends_on:
      - zookeeper
    extra_hosts:
      - "host.docker.internal:host-gateway"

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    hostname: schema-registry
    ports:
      - "9191:8081"
    env_file:
      - .env.kafka
    depends_on:
      - broker
    extra_hosts:
      - "host.docker.internal:host-gateway"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "9090:8080"
    env_file:
      - .env.kafka
    depends_on:
      - broker
      - schema-registry
    extra_hosts:
      - "host.docker.internal:host-gateway"

  loki:
    image: grafana/loki:main
    container_name: loki
    command: ["-config.file=/etc/loki/local-config.yaml"]
    ports:
      - "3100:3100"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  prometheus:
    image: prom/prometheus:v2.46.0
    container_name: prometheus
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  tempo:
    image: grafana/tempo:2.2.2
    container_name: tempo
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yaml:ro
      - ./data/tempo:/tmp/tempo
    ports:
      - "3110:3100" # Tempo
      - "9411:9411" # zipkin
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - .docker/data/mongodb:/data/db
    env_file:
      - .env.gateway
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    ports:
      - "9081:8081"
    env_file:
      - .env.gateway
    extra_hosts:
      - "host.docker.internal:host-gateway"

  postgres:
    container_name: postgres
    image: postgres
    restart: always
    env_file:
      - .env.gateway
    volumes:
      - .docker/postgres:/data/postgres
      - ./docker/postgresql:/docker-entrypoint-initdb.d
      - ./docker/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  pgadmin:
    container_name: pgadmin
    image: dockerframework/pgadmin
    restart: always
    depends_on:
      - postgres
    env_file:
      - .env.gateway
    volumes:
      - .docker/pgadmin:/database/admin/pgadmin
    ports:
      - "5050:80"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mysql:
    container_name: mysql
    image: mysql:8.3.0
    restart: on-failure
    env_file:
      - .env.gateway
    ports:
      - "3306:3306"
    volumes:
      - ./.docker/data/mysql:/var/lib/mysql
      - ./docker/mysql:/docker-entrypoint-initdb.d
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    extra_hosts:
      - "host.docker.internal:host-gateway"

  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:latest
    restart: on-failure
    env_file:
      - .env.gateway
    ports:
      - "9080:80"
    depends_on:
      - mysql
    extra_hosts:
      - "host.docker.internal:host-gateway"
